name: Deploy Cloud Run

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - 'mkdocs.yml'
      - '.github/workflows/deploy-docs.yml'
  workflow_dispatch:

env:
  SERVICE_NAME: privsyn-tabular
  REGION: us-east4
  PROJECT_ID: gen-lang-client-0649776758
  IMAGE: gcr.io/gen-lang-client-0649776758/privsyn-tabular

jobs:
  deploy:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          install_components: beta

      - name: Build and push container image
        run: |
          set -euo pipefail
          BUILD_NAME=$(gcloud builds submit \
            --project "${PROJECT_ID}" \
            --tag "${IMAGE}" \
            --async \
            --format='value(name)')
          BUILD_ID=$(basename "${BUILD_NAME}")
          echo "Started Cloud Build: ${BUILD_ID}"
          STATUS="PENDING"
          while true; do
            STATUS=$(gcloud builds describe "${BUILD_ID}" --project "${PROJECT_ID}" --format='value(status)')
            echo "Cloud Build status: ${STATUS}"
            case "${STATUS}" in
              SUCCESS)
                break
                ;;
              FAILURE|CANCELLED|TIMEOUT|INTERNAL_ERROR|EXPIRED)
                echo "Cloud Build failed with status: ${STATUS}" >&2
                gcloud builds log "${BUILD_ID}" --project "${PROJECT_ID}"
                exit 1
                ;;
              "")
                echo "Unable to determine build status" >&2
                exit 1
                ;;
            esac
            sleep 10
          done

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy "${SERVICE_NAME}" \
            --image "${IMAGE}" \
            --region "${REGION}" \
            --platform managed \
            --allow-unauthenticated
